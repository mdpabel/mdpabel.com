'use client';

import { useState, useEffect, FormEvent } from 'react';
import { Shield, Info, DollarSign } from 'lucide-react';
import { Button } from '@/components/ui';

interface FormData {
  websiteUrl: string;
  requirements: string;
  malwareNotice: string;
  hostingProvider: string;
  urgencyLevel: 'low' | 'medium' | 'high' | 'urgent';
  numberOfSites: number;
}

const URGENCY_LEVELS = [
  { value: 'low', label: 'Low (2 days)', multiplier: 1 },
  { value: 'medium', label: 'Medium (1 day)', multiplier: 1.1 },
  { value: 'high', label: 'High (12 hours)', multiplier: 1.2 },
  { value: 'urgent', label: 'Urgent (2 hours)', multiplier: 1.4 },
];

const BASE_PRICE = 79;

export default function MalwareRemovalForm() {
  const [form, setForm] = useState<FormData>({
    websiteUrl: '',
    requirements: '',
    malwareNotice: '',
    hostingProvider: '',
    urgencyLevel: 'low',
    numberOfSites: 1,
  });
  const [price, setPrice] = useState<number>(BASE_PRICE);

  useEffect(() => {
    const level = URGENCY_LEVELS.find((l) => l.value === form.urgencyLevel)!;
    setPrice(BASE_PRICE * form.numberOfSites * level.multiplier);
  }, [form.urgencyLevel, form.numberOfSites]);

  const handleChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement
    >,
  ) => {
    const { name, value } = e.target;
    setForm((f) => ({
      ...f,
      [name]:
        name === 'numberOfSites'
          ? Math.max(1, Math.min(10, parseInt(value) || 1))
          : (value as any),
    }));
  };

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();
  };

  return (
    <form
      onSubmit={handleSubmit}
      className='space-y-6 bg-slate-800/50 shadow mx-auto p-8 border border-slate-700 rounded-lg text-slate-100'>
      <h2 className='flex items-center gap-2 font-semibold text-white text-2xl'>
        <Shield className='w-6 h-6 text-blue-400' />
        Malware Removal Request
      </h2>

      <div className='space-y-4'>
        <label className='block'>
          <span className='text-slate-300 text-sm'>Website URL *</span>
          <input
            type='url'
            name='websiteUrl'
            value={form.websiteUrl}
            onChange={handleChange}
            required
            placeholder='https://yourwebsite.com'
            className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'
          />
        </label>

        <label className='block'>
          <span className='text-slate-300 text-sm'>
            Describe Your Requirements *
          </span>
          <textarea
            name='requirements'
            value={form.requirements}
            onChange={handleChange}
            required
            rows={4}
            placeholder='Describe the malware symptoms or errors...'
            className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'
          />
        </label>

        <div className='gap-4 grid grid-cols-1 md:grid-cols-2'>
          <label className='block'>
            <span className='text-slate-300 text-sm'>
              How did you notice the malware? *
            </span>
            <select
              name='malwareNotice'
              value={form.malwareNotice}
              onChange={handleChange}
              required
              className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'>
              <option value=''>-- Select one --</option>
              {[
                'Website showing warning messages',
                'Google flagged my site',
                'Antivirus detected malware',
                'Suspicious redirects',
                'Unexpected pop-ups',
                'Site performance issues',
                'Other',
              ].map((opt) => (
                <option key={opt} value={opt}>
                  {opt}
                </option>
              ))}
            </select>
          </label>

          <label className='block'>
            <span className='text-slate-300 text-sm'>Hosting Provider</span>
            <input
              type='text'
              name='hostingProvider'
              value={form.hostingProvider}
              onChange={handleChange}
              placeholder='e.g. Bluehost, GoDaddy'
              className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'
            />
          </label>
        </div>

        <div className='gap-4 grid grid-cols-1 md:grid-cols-2'>
          <label className='block'>
            <span className='text-slate-300 text-sm'>Urgency Level</span>
            <select
              name='urgencyLevel'
              value={form.urgencyLevel}
              onChange={handleChange}
              className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'>
              {URGENCY_LEVELS.map((l) => (
                <option key={l.value} value={l.value}>
                  {l.label}
                </option>
              ))}
            </select>
          </label>

          <label className='block'>
            <span className='text-slate-300 text-sm'>Number of Sites</span>
            <input
              type='number'
              name='numberOfSites'
              value={form.numberOfSites}
              onChange={handleChange}
              min={1}
              max={10}
              className='block bg-slate-800 mt-1 px-3 py-2 border border-slate-600 rounded-md focus:ring-blue-500 w-full'
            />
          </label>
        </div>
      </div>

      {/* Price Summary */}
      <div className='flex justify-between items-center bg-slate-800 p-4 rounded-md'>
        <div className='flex items-center gap-2 text-slate-300'>
          <DollarSign className='w-5 h-5 text-green-400' />
          <span className='text-sm'>Estimated Price</span>
        </div>
        <div className='font-semibold text-white text-2xl'>
          ${price.toFixed(2)}
        </div>
      </div>

      <Button type='submit'>Place Order</Button>

      <p className='flex items-center gap-1 text-slate-500 text-xs'>
        <Info className='w-4 h-4' />
        No payment needed now—after you place your order, we’ll set up your
        dashboard where you can chat directly with us.
      </p>
    </form>
  );
}
