import RSS from 'rss';
import { NextResponse } from 'next/server';
import { wordpress } from '@/lib/wordpress'; // Same as before

export const dynamic = 'force-dynamic';

export async function GET() {
  const siteUrl = 'https://www.mdpabel.com';

  // Fetch all published malware logs
  const { posts } = await wordpress.getPosts({
    postType: 'malware-log',
    status: 'publish',
  });

  if (!posts || posts.length === 0) {
    return new Response('No malware logs found', { status: 404 });
  }

  // Create RSS feed for malware logs
  const feed = new RSS({
    title: 'MD Pabel Malware Logs',
    description:
      'Detailed logs of malware discoveries, analyses, and remediations from client WordPress websites. Insights into common threats, infection locations, and cleanup strategies.',
    site_url: siteUrl,
    feed_url: `${siteUrl}/rss/malware-log.xml`,
    language: 'en-US',
    pubDate: new Date(),
    copyright: `All rights reserved ${new Date().getFullYear()}, MD Pabel`,
  });

  // Add each malware log to the feed
  posts.forEach((post) => {
    const postUrl = `${siteUrl}/malware-log/${post.slug}`;
    feed.item({
      title: post.title,
      url: postUrl,
      guid: postUrl,
      description: post.acf?.issue_reported || post.excerpt || post.content,
      date: post.date,
      author: post.author?.name || 'MD Pabel Team',
      categories: post.categories?.map((cat) => cat.name) || [],
      enclosure: post.acf?.screenshot?.[0]?.url
        ? { url: post.acf.screenshot[0].url }
        : undefined,
    });
  });

  const xml = feed.xml({ indent: true });

  return new Response(xml, {
    headers: {
      'Content-Type': 'application/rss+xml; charset=utf-8',
    },
  });
}
